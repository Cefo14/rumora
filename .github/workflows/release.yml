name: Release

description: Automated release process using Semantic Release

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'package.json'
      - 'pnpm-lock.yaml'

permissions:
  contents: write
  issues: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    environment: npm-publish
    outputs:
      released: ${{ steps.semantic-release.outputs.new_release_published }}
      version: ${{ steps.semantic-release.outputs.new_release_version }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run quality checks
        uses: ./.github/actions/quality

      - name: Build library for release
        run: pnpm build:lib

      - name: Run semantic release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Display release summary
        run: |
          if [[ "${{ steps.semantic-release.outputs.new_release_published }}" == "true" ]]; then
            echo "## Release Published" >> $GITHUB_STEP_SUMMARY
            echo "| Package | Version | NPM |" >> $GITHUB_STEP_SUMMARY
            echo "|---------|---------|-----|" >> $GITHUB_STEP_SUMMARY
            echo "| rumora | v${{ steps.semantic-release.outputs.new_release_version }} | [View on NPM](https://www.npmjs.com/package/rumora/v/${{ steps.semantic-release.outputs.new_release_version }}) |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Installation:** \`npm install rumora@latest\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "## No Release Created" >> $GITHUB_STEP_SUMMARY
            echo "**Reason:** No releasable commits found (feat, fix, perf, BREAKING CHANGE)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Semantic-release automatically determines when to create releases based on conventional commits." >> $GITHUB_STEP_SUMMARY
          fi
